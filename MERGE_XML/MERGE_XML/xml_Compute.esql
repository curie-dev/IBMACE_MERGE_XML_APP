BROKER SCHEMA MERGE_XML

CREATE COMPUTE MODULE xml_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot.XMLNSC.Result = 'No file found';
	END;
	
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
	
	
END MODULE;


CREATE COMPUTE MODULE xml_Compute2
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CREATE LASTCHILD OF Environment.VAR DOMAIN 'XMLNSC' NAME 'MESSAGE';
		SET Environment.VAR.MESSAGE[<].(XMLNSC.CDataField)Data = CAST(ASBITSTREAM(InputRoot.XMLNSC) AS CHARACTER CCSID 1208 ENCODING 546);
		RETURN TRUE;
		/*CALL CopyMessageHeaders();
		CREATE LASTCHILD OF Environment.VAR NAME 'MESSAGE';
		DECLARE i INTEGER 1;
		FOR FILE AS InputRoot.XMLNSC.Files.File[] DO
			SET Environment.VAR.MESSAGE[i].Data = FILE.FileName;
			SET i = i + 1;
		END FOR;	
		RETURN TRUE;*/
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE xml_Compute1
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		SET OutputLocalEnvironment.Destination.File.Name = 'FINAL_MERGE_'||CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyMMddHHmmssSSSSSS')||'.xml';
		PROPAGATE TO TERMINAL 2 DELETE NONE;
		SET OutputRoot.HTTPRequestHeader."Content-Type" = 'application/xml';
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
